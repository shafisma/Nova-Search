import { searchSearxng } from '@/lib/searxng';

const articleWebsites = [
  'yahoo.com',
  'www.exchangewire.com',
  'businessinsider.com',
  // Bangladeshi news providers
  'thedailystar.net',
  'bdnews24.com',
  'newagebd.net',
  'dhakatribune.com',
  'prothomalo.com',
  'jugantor.com',
  'kalerkantho.com',
  'banglanews24.com',
  'banglatribune.com',
  'daily-sun.com',
  'observerbd.com',
  'financialexpress.com.bd',
  /* 'wired.com',
  'mashable.com',
  'theverge.com',
  'gizmodo.com',
  'cnet.com',
  'venturebeat.com', */
];


const topics = [
  'AI',
  'tech',
  'Bangladesh',
  'startup',
  'business',
  'economy',
  'education',
  'science',
  'politics',
  'sports',
  'health',
  'entertainment',
  'world',
  'environment',
  'technology',
  'travel',
  'lifestyle',
  'opinion',
  'editorial',
  'crime',
  'weather',
  'agriculture',
  'finance',
  'markets',
  'stock',
  'banking',
  'insurance',
  'real estate',
  'energy',
  'telecom',
  'transport',
  'infrastructure',
  'law',
  'order',
  'accident',
  'disaster',
  'festival',
  'culture',
  'arts',
  'books',
  'movies',
  'music',
  'fashion',
  'food',
  'recipes',
  'career',
  'jobs',
  'youth',
  'women',
  'children',
  'technology',
  'innovation',
  'startup',
  'covid',
  'coronavirus',
  'research',
  'university',
  'school',
  'college',
  'scholarship',
  'diplomacy',
  'foreign',
  'trade',
  'import',
  'export',
  'budget',
  'tax',
  'policy',
  'government',
  'parliament',
  'election',
  'protest',
  'strike',
  'court',
  'supreme court',
  'high court',
  'local',
  'international',
  'feature',
  'analysis',
  'review',
  'interview',
  'profile',
  'history',
  'heritage',
  'startup',
  'SME',
  'NGO',
  'charity',
  'volunteer',
  'award',
  'achievement',
  'accident',
  'disaster',
  'fire',
  'flood',
  'cyclone',
  'earthquake',
  'climate',
  'migration',
  'refugee',
  'security',
  'defence',
  'army',
  'navy',
  'air force',
  'police',
  'border',
  'customs',
  'corruption',
  'scandal',
  'investigation',
  'court',
  'trial',
  'sentence',
  'prison',
  'release',
  'arrest',
  'bail',
  'appeal',
  'verdict',
  'case',
  'hearing',
  'witness',
  'evidence',
  'testimony',
  'report',
  'survey',
  'statistics',
  'data',
  'study',
  'finding',
  'trend',
  'forecast',
  'plan',
  'project',
  'initiative',
  'launch',
  'event',
  'conference',
  'seminar',
  'workshop',
  'meeting',
  'summit',
  'forum',
  'panel',
  'debate',
  'discussion',
  'speech',
  'statement',
  'announcement',
  'press',
  'media',
  'coverage',
  'campaign',
  'drive',
  'movement',
  'initiative',
  'mission',
  'vision',
  'goal',
  'objective',
  'strategy',
  'policy',
  'plan',
  'roadmap',
  'agenda',
  'priority',
  'target',
  'milestone',
  'progress',
  'update',
  'result',
  'outcome',
  'impact',
  'effect',
  'benefit',
  'challenge',
  'problem',
  'solution',
  'opportunity',
  'risk',
  'threat',
  'issue',
  'concern',
  'controversy',
  'debate',
  'criticism',
  'support',
  'opposition',
  'reaction',
  'response',
  'feedback',
  'comment',
  'opinion',
  'view',
  'perspective',
  'insight',
  'analysis',
  'review',
  'summary',
  'highlight',
  'spotlight',
  'focus',
  'feature',
  'story',
  'report',
  'coverage',
  'news',
  'update',
  'alert',
  'breaking',
  'exclusive',
  'special',
  'investigation',
  'expose',
  'revelation',
  'disclosure',
  'leak',
  'scandal',
  'controversy',
  'affair',
  'incident',
  'case',
  'matter',
  'subject',
  'topic',
  'theme',
  'category',
  'section',
  'column',
  'page',
  'edition',
  'issue',
  'volume',
  'series',
  'part',
  'installment',
  'segment',
  'chapter',
  'scene',
  'sequence',
  'episode',
  'clip',
  'trailer',
  'preview',
  'teaser',
  'promo',
  'ad',
  'commercial',
  'sponsor',
  'partner',
  'collaboration',
  'all',
];

export const GET = async (req: Request) => {
  try {
    const params = new URL(req.url).searchParams;
    const mode: 'normal' | 'preview' =
      (params.get('mode') as 'normal' | 'preview') || 'normal';

    let data = [];

    // Limit the number of parallel requests to avoid overloading SearxNG
    const SAMPLE_SIZE = 16; // Number of site/topic pairs to sample per request
    const pairs: Array<{ site: string; topic: string }> = [];
    for (let i = 0; i < SAMPLE_SIZE; i++) {
      const site = articleWebsites[Math.floor(Math.random() * articleWebsites.length)];
      const topic = topics[Math.floor(Math.random() * topics.length)];
      pairs.push({ site, topic });
    }

    if (mode === 'normal') {
      data = (
        await Promise.all(
          pairs.map(async ({ site, topic }) => {
            return (
              await searchSearxng(
                `site:${site} ${topic}`,
                {
                  engines: ['bing news'],
                  pageno: 1,
                },
              )
            ).results;
          })
        )
      )
        .map((result) => result)
        .flat()
        .sort(() => Math.random() - 0.5);
    } else {
      const site = articleWebsites[Math.floor(Math.random() * articleWebsites.length)];
      const topic = topics[Math.floor(Math.random() * topics.length)];
      data = (
        await searchSearxng(
          `site:${site} ${topic}`,
          { engines: ['bing news'], pageno: 1 },
        )
      ).results;
    }

    // Add fallback image for missing thumbnails
    const fallbackImage =
      'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg';
    data = data.map((item) => ({
      ...item,
      thumbnail: item.thumbnail || item.img_src || fallbackImage,
    }));

    return Response.json(
      {
        blogs: data,
      },
      {
        status: 200,
      },
    );
  } catch (err) {
    console.error(`An error occurred in discover route: ${err}`);
    return Response.json(
      {
        message: 'An error has occurred',
      },
      {
        status: 500,
      },
    );
  }
};
